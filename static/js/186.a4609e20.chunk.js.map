{"version":3,"file":"static/js/186.a4609e20.chunk.js","mappings":"mPAuCA,UAjCgB,WACd,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,2FACCH,GAAa,GADd,mBAGsBI,EAAAA,EAAAA,IAAiBV,GAHvC,OAGSW,EAHT,OAIGP,EAAWO,GAJd,gDAMGH,EAAS,EAAD,IANX,yBAQGF,GAAa,GARhB,2EAAD,EAWD,GAAE,CAACN,KAEF,iBAAKY,UAAU,kBAAf,UACGT,EAAQU,KAAI,gBAAGb,EAAH,EAAGA,GAAIc,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,mCAAWD,KACVC,IAFMf,EADE,IAMZK,IAAa,SAAC,IAAD,IACbE,GAASS,EAAAA,GAAAA,MAAY,oBAG3B,C,mMCnCDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAEFC,EAAa,mCAAG,yGAAOC,EAAP,6DACRH,EAAAA,EAAAA,IAAA,UAAaG,EAAb,oBAAkCF,IAD1B,cACrBG,EADqB,yBAEpBA,EAAKV,MAFe,2CAAH,qDAKbW,EAAiB,mCAAG,WAAMC,GAAN,uFACZN,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCK,EADtC,gCADY,cACzBF,EADyB,yBAIxBA,EAAKV,MAJmB,2CAAH,sDAOjBa,EAAkB,mCAAG,WAAOxB,GAAP,4FAAWyB,EAAX,+BAA4B,GAA5B,SACbR,EAAAA,EAAAA,IAAA,gBACRjB,GADQ,OACHyB,EADG,oBACuBP,EADvB,oBADa,cAC1BG,EAD0B,yBAIzBA,EAAKV,MAJoB,2CAAH,sDAOlBe,EAAa,mCAAG,WAAMC,GAAN,uFACRV,EAAAA,EAAAA,IAAA,gBACRU,EADQ,4BACmBT,EADnB,oBADQ,cACrBG,EADqB,yBAIpBA,EAAKV,KAAKiB,MAJU,2CAAH,sDAOblB,EAAgB,mCAAG,WAAMiB,GAAN,uFACXV,EAAAA,EAAAA,IAAA,gBACRU,EADQ,4BACmBT,EADnB,oBADW,cACxBG,EADwB,yBAIvBA,EAAKV,KAAKkB,SAJa,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/apiService.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { fetchReviewsInfo } from 'services/apiService';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { toast } from 'react-toastify';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      try {\n        const data = await fetchReviewsInfo(id);\n        setReviews(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [id]);\n  return (\n    <div className=\"reviews-content\">\n      {reviews.map(({ id, author, content }) => (\n        <li key={id}>\n          <p>Autor: {author}</p>\n          {content}\n        </li>\n      ))}\n      {isLoading && <Loader />}\n      {error && toast.error('Please wait...')}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '511459bb76b455592e33aca5ec0b21c6';\n\nexport const fetchDayTrend = async (endpoints = `trending/movie/day`) => {\n  const resp = await axios.get(`${endpoints}?api_key=${apiKey}`);\n  return resp.data;\n};\n\nexport const fetchMovieByQuery = async query => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return resp.data;\n};\n\nexport const fetchMovieDetsById = async (id, detailEndpoint = '') => {\n  const resp = await axios.get(\n    `movie/${id}${detailEndpoint}?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data;\n};\n\nexport const fetchCastInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.cast;\n};\n\nexport const fetchReviewsInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/reviews?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.results;\n};\n"],"names":["id","useParams","useState","reviews","setReviews","isLoading","setIsLoading","error","setError","useEffect","fetchReviewsInfo","data","className","map","author","content","toast","axios","apiKey","fetchDayTrend","endpoints","resp","fetchMovieByQuery","query","fetchMovieDetsById","detailEndpoint","fetchCastInfo","movieId","cast","results"],"sourceRoot":""}