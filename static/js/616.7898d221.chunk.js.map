{"version":3,"file":"static/js/616.7898d221.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetails.module.css?6cd2","pages/MovieDetails.jsx","services/apiService.js","services/constants.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviedetails\":\"MovieDetails_moviedetails__G0e4s\",\"buttonGoBack\":\"MovieDetails_buttonGoBack__s-8fj\"};","import { useState, useEffect } from 'react';\nimport {\n  useParams,\n  NavLink,\n  Outlet,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport { fetchMovieDetsById } from '../services/apiService';\nimport { BASE_IMG_URL } from 'services/constants';\nimport { Loader } from 'components/Loader/Loader';\nimport { toast } from 'react-toastify';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState(null);\n  const { id } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      try {\n        const data = await fetchMovieDetsById(id);\n        setMovieData(data);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [id]);\n\n  const handleGoBack = () => {\n    navigate(location.state.from);\n  };\n  if (!movieData) {\n    return (\n      <div>\n        <h1>Loading data...</h1>\n      </div>\n    );\n  }\n\n  return (\n    <div className={css.moviedetails}>\n      <button className={css.buttonGoBack} onClick={handleGoBack}>\n        Go back\n      </button>\n      <div className=\"details\">\n        <div>\n          <img\n            src={\n              movieData.poster_path\n                ? BASE_IMG_URL + movieData.poster_path\n                : require('img/smile.jpg')\n            }\n            alt=\"\"\n            width=\"300\"\n          />\n        </div>\n        <div className=\"about\">\n          <h2>\n            {movieData.title} (\n            {movieData.release_date\n              ? movieData.release_date.substring(0, 4)\n              : ''}\n            )\n          </h2>\n\n          <p>\n            User Score: {''}\n            {movieData.vote_average\n              ? Math.fround(movieData.vote_average * 10).toFixed(0)\n              : ''}\n            %\n          </p>\n\n          <h3>Overview</h3>\n          <p>{movieData.overview}</p>\n\n          <h4>Genres</h4>\n          <p className=\"genres\">\n            {movieData.genres\n              ? movieData.genres.map(genre => genre.name).join('')\n              : ''}\n          </p>\n        </div>\n      </div>\n      <h5 className=\"addinfo\">Additional information</h5>\n      <div className=\"navlink\">\n        <NavLink\n          to=\"cast\"\n          className=\"cast\"\n          state={{\n            from: location.state.from,\n          }}\n        >\n          Cast\n        </NavLink>\n        <NavLink\n          to=\"reviews\"\n          className=\"reviews\"\n          state={{\n            from: location.state.from,\n          }}\n        >\n          Reviews\n        </NavLink>\n      </div>\n      <Outlet />\n      {isLoading && <Loader />}\n      {error && toast.error('Please wait..')}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '511459bb76b455592e33aca5ec0b21c6';\n\nexport const fetchDayTrend = async (\n  endpoints = `trending/movie/day`,\n  options\n) => {\n  const resp = await axios.get(`${endpoints}?api_key=${apiKey}`, options);\n  return resp.data;\n};\n\nexport const fetchMovieByQuery = async (query, options) => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`,\n    options\n  );\n  return resp.data;\n};\n\nexport const fetchMovieDetsById = async (id, detailEndpoint = '', options) => {\n  const resp = await axios.get(\n    `movie/${id}${detailEndpoint}?api_key=${apiKey}&language=en-US`,\n    options\n  );\n  return resp.data;\n};\n\nexport const fetchCastInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.cast;\n};\n\nexport const fetchReviewsInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/reviews?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.results;\n};\n","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400';\n"],"names":["useState","movieData","setMovieData","id","useParams","location","useLocation","navigate","useNavigate","isLoading","setIsLoading","error","setError","useEffect","fetchMovieDetsById","data","className","css","onClick","state","from","src","poster_path","BASE_IMG_URL","require","alt","width","title","release_date","substring","vote_average","Math","fround","toFixed","overview","genres","map","genre","name","join","to","Loader","toast","axios","apiKey","fetchDayTrend","endpoints","options","resp","fetchMovieByQuery","query","detailEndpoint","fetchCastInfo","movieId","cast","fetchReviewsInfo","results"],"sourceRoot":""}