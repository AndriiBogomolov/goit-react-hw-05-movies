{"version":3,"file":"static/js/884.acc967a7.chunk.js","mappings":"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","sources":["pages/MovieDetails.jsx","services/apiService.js","services/constants.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport {\n  useParams,\n  NavLink,\n  Outlet,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport { fetchMovieDetsById } from '../services/apiService';\nimport { BASE_IMG_URL } from 'services/constants';\nimport { Loader } from 'components/Loader/Loader';\nimport { toast } from 'react-toastify';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const { id } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      try {\n        const data = await fetchMovieDetsById(id);\n        setMovieData(data);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [id]);\n\n  const handleGoBack = () => {\n    navigate(location.state.from);\n  };\n\n  return (\n    <div className=\"moviedetails\">\n      <button className=\"buttonGoBack\" onClick={handleGoBack}>\n        Go back\n      </button>\n      <div className=\"details\">\n        <div>\n          <img\n            src={\n              movieData.poster_path\n                ? BASE_IMG_URL + movieData.poster_path\n                : require('img/smile.jpg')\n            }\n            alt=\"\"\n            width=\"300\"\n          />\n        </div>\n        <div className=\"about\">\n          <h2>\n            {movieData.title} (\n            {movieData.release_date\n              ? movieData.release_date.substring(0, 4)\n              : ''}\n            )\n          </h2>\n\n          <p>\n            User Score: {''}\n            {movieData.vote_average\n              ? Math.fround(movieData.vote_average * 10).toFixed(0)\n              : ''}\n            %\n          </p>\n\n          <h3>Overview</h3>\n          <p>{movieData.overview}</p>\n\n          <h4>Genres</h4>\n          <p className=\"genres\">\n            {movieData.genres\n              ? movieData.genres.map(genre => genre.name).join('')\n              : ''}\n          </p>\n        </div>\n      </div>\n      <h5 className=\"addinfo\">Additional information</h5>\n      <div className=\"navlink\">\n        <NavLink\n          to=\"cast\"\n          className=\"cast\"\n          state={{\n            from: location.state.from,\n          }}\n        >\n          Cast\n        </NavLink>\n        <NavLink\n          to=\"reviews\"\n          className=\"reviews\"\n          state={{\n            from: location.state.from,\n          }}\n        >\n          Reviews\n        </NavLink>\n      </div>\n      <Outlet />\n      {isLoading && <Loader />}\n      {error && toast.error('Please wait..')}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '511459bb76b455592e33aca5ec0b21c6';\n\nexport const fetchDayTrend = async (endpoints = `trending/movie/day`) => {\n  const resp = await axios.get(`${endpoints}?api_key=${apiKey}`);\n  return resp.data;\n};\n\nexport const fetchMovieByQuery = async query => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return resp.data;\n};\n\nexport const fetchMovieDetsById = async (id, detailEndpoint = '') => {\n  const resp = await axios.get(\n    `movie/${id}${detailEndpoint}?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data;\n};\n\nexport const fetchCastInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.cast;\n};\n\nexport const fetchReviewsInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/reviews?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.results;\n};\n","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400';\n"],"names":["useState","movieData","setMovieData","isLoading","setIsLoading","error","setError","id","useParams","location","useLocation","navigate","useNavigate","useEffect","fetchMovieDetsById","data","className","onClick","state","from","src","poster_path","BASE_IMG_URL","require","alt","width","title","release_date","substring","vote_average","Math","fround","toFixed","overview","genres","map","genre","name","join","to","toast","axios","apiKey","fetchDayTrend","endpoints","resp","fetchMovieByQuery","query","detailEndpoint","fetchCastInfo","movieId","cast","fetchReviewsInfo","results"],"sourceRoot":""}