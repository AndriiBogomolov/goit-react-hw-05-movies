{"version":3,"file":"static/js/247.d705c000.chunk.js","mappings":"8PAiDA,UA1Ca,WACX,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,2FACCD,GAAa,GADd,mBAGsBE,EAAAA,EAAAA,IAAcV,GAHpC,OAGSW,EAHT,OAIGP,EAAQO,GAJX,gDAMGL,EAAS,EAAD,IANX,yBAQGE,GAAa,GARhB,2EAAD,EAWD,GAAE,CAACR,KAGF,iBAAKY,UAAU,WAAf,UACGT,EAAKU,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,KAA1B,OACR,gBAAkBJ,UAAU,YAA5B,WACE,gBACEK,IACEF,EACIG,EAAAA,EAAeH,EACfI,EAAQ,MAEdC,IAAI,GACJC,MAAM,QAEPL,IAVMF,EADD,IAcTP,IAAa,SAAC,IAAD,IACbF,GAASiB,EAAAA,GAAAA,MAAY,oBAG3B,C,mMC7CDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAEFC,EAAa,mCAAG,yGAAOC,EAAP,6DACRH,EAAAA,EAAAA,IAAA,UAAaG,EAAb,oBAAkCF,IAD1B,cACrBG,EADqB,yBAEpBA,EAAKhB,MAFe,2CAAH,qDAKbiB,EAAiB,mCAAG,WAAMC,GAAN,uFACZN,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCK,EADtC,gCADY,cACzBF,EADyB,yBAIxBA,EAAKhB,MAJmB,2CAAH,sDAOjBmB,EAAkB,mCAAG,WAAO9B,GAAP,4FAAW+B,EAAX,+BAA4B,GAA5B,SACbR,EAAAA,EAAAA,IAAA,gBACRvB,GADQ,OACH+B,EADG,oBACuBP,EADvB,oBADa,cAC1BG,EAD0B,yBAIzBA,EAAKhB,MAJoB,2CAAH,sDAOlBD,EAAa,mCAAG,WAAMsB,GAAN,uFACRT,EAAAA,EAAAA,IAAA,gBACRS,EADQ,4BACmBR,EADnB,oBADQ,cACrBG,EADqB,yBAIpBA,EAAKhB,KAAKR,MAJU,2CAAH,sDAOb8B,EAAgB,mCAAG,WAAMD,GAAN,uFACXT,EAAAA,EAAAA,IAAA,gBACRS,EADQ,4BACmBR,EADnB,oBADW,cACxBG,EADwB,yBAIvBA,EAAKhB,KAAKuB,SAJa,2CAAH,qD,uDC/BtB,IAAMhB,EAAe,iC","sources":["components/Cast/Cast.jsx","services/apiService.js","services/constants.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { fetchCastInfo } from 'services/apiService';\nimport { useParams } from 'react-router-dom';\nimport { BASE_IMG_URL } from 'services/constants';\nimport { Loader } from 'components/Loader/Loader';\nimport { toast } from 'react-toastify';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      try {\n        const data = await fetchCastInfo(id);\n        setCast(data);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [id]);\n\n  return (\n    <div className=\"Cast_box\">\n      {cast.map(({ cast_id, profile_path, name }) => (\n        <li key={cast_id} className=\"Cast_card\">\n          <img\n            src={\n              profile_path\n                ? BASE_IMG_URL + profile_path\n                : require('img/smile.jpg')\n            }\n            alt=\"\"\n            width=\"100\"\n          />\n          {name}\n        </li>\n      ))}\n      {isLoading && <Loader />}\n      {error && toast.error('Please wait...')}\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '511459bb76b455592e33aca5ec0b21c6';\n\nexport const fetchDayTrend = async (endpoints = `trending/movie/day`) => {\n  const resp = await axios.get(`${endpoints}?api_key=${apiKey}`);\n  return resp.data;\n};\n\nexport const fetchMovieByQuery = async query => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return resp.data;\n};\n\nexport const fetchMovieDetsById = async (id, detailEndpoint = '') => {\n  const resp = await axios.get(\n    `movie/${id}${detailEndpoint}?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data;\n};\n\nexport const fetchCastInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.cast;\n};\n\nexport const fetchReviewsInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/reviews?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.results;\n};\n","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400';\n"],"names":["id","useParams","useState","cast","setCast","error","setError","isLoading","setIsLoading","useEffect","fetchCastInfo","data","className","map","cast_id","profile_path","name","src","BASE_IMG_URL","require","alt","width","toast","axios","apiKey","fetchDayTrend","endpoints","resp","fetchMovieByQuery","query","fetchMovieDetsById","detailEndpoint","movieId","fetchReviewsInfo","results"],"sourceRoot":""}