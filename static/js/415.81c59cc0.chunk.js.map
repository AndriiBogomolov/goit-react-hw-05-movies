{"version":3,"file":"static/js/415.81c59cc0.chunk.js","mappings":"wMAGaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAU,cAAd,SACGH,EAAOI,KAAI,SAAAC,GAAK,OACf,eAAmBF,UAAU,aAA7B,UACE,SAAC,KAAD,CACEG,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CACLC,KAAMR,GAHV,SAMGI,EAAMK,OAASL,EAAMM,QAPjBN,EAAME,GADA,KActB,C,oICcD,UA7Ba,WACX,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,IAAnC,eAAOI,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,6FACCH,GAAa,GADd,mBAG6BI,EAAAA,EAAAA,MAH7B,gBAGWC,EAHX,EAGWA,QACRP,EAAUO,GAJb,gDAMGH,EAAS,EAAD,IANX,yBAQGF,GAAa,GARhB,2EAAD,EAWD,GAAE,KAGD,4BACE,2CACmB,IAAlBf,EAAOqB,SAAgB,SAAC,IAAD,CAAYrB,OAAQA,IAC3Cc,IAAa,SAAC,IAAD,IACbE,GAASM,EAAAA,GAAAA,MAAY,oBAG3B,C,mMC/BDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAEFL,EAAa,mCAAG,yGAAOM,EAAP,6DACRF,EAAAA,EAAAA,IAAA,UAAaE,EAAb,oBAAkCD,IAD1B,cACrBE,EADqB,yBAEpBA,EAAKC,MAFe,2CAAH,qDAKbC,EAAiB,mCAAG,WAAMC,GAAN,uFACZN,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCK,EADtC,gCADY,cACzBH,EADyB,yBAIxBA,EAAKC,MAJmB,2CAAH,sDAOjBG,EAAkB,mCAAG,WAAOvB,GAAP,4FAAWwB,EAAX,+BAA4B,GAA5B,SACbR,EAAAA,EAAAA,IAAA,gBACRhB,GADQ,OACHwB,EADG,oBACuBP,EADvB,oBADa,cAC1BE,EAD0B,yBAIzBA,EAAKC,MAJoB,2CAAH,sDAOlBK,EAAa,mCAAG,WAAMC,GAAN,uFACRV,EAAAA,EAAAA,IAAA,gBACRU,EADQ,4BACmBT,EADnB,oBADQ,cACrBE,EADqB,yBAIpBA,EAAKC,KAAKO,MAJU,2CAAH,sDAObC,EAAgB,mCAAG,WAAMF,GAAN,uFACXV,EAAAA,EAAAA,IAAA,gBACRU,EADQ,4BACmBT,EADnB,oBADW,cACxBE,EADwB,yBAIvBA,EAAKC,KAAKP,SAJa,2CAAH,qD","sources":["components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/apiService.js"],"sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\nimport propTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className=\"render_List\">\n      {movies.map(movie => (\n        <li key={movie.id} className=\"renderCard\">\n          <NavLink\n            to={`/movies/${movie.id}`}\n            state={{\n              from: location,\n            }}\n          >\n            {movie.title || movie.name}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number.isRequired,\n      title: propTypes.string,\n      name: propTypes.string,\n    })\n  ),\n};\n","import { useEffect, useState } from 'react';\nimport { fetchDayTrend } from '../services/apiService';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport { toast } from 'react-toastify';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      try {\n        const { results } = await fetchDayTrend();\n        setMovies(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, []);\n\n  return (\n    <div>\n      <h1>Tranding today</h1>\n      {movies.length !== 0 && <MoviesList movies={movies} />}\n      {isLoading && <Loader />}\n      {error && toast.error('Please wait...')}\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '511459bb76b455592e33aca5ec0b21c6';\n\nexport const fetchDayTrend = async (endpoints = `trending/movie/day`) => {\n  const resp = await axios.get(`${endpoints}?api_key=${apiKey}`);\n  return resp.data;\n};\n\nexport const fetchMovieByQuery = async query => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return resp.data;\n};\n\nexport const fetchMovieDetsById = async (id, detailEndpoint = '') => {\n  const resp = await axios.get(\n    `movie/${id}${detailEndpoint}?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data;\n};\n\nexport const fetchCastInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.cast;\n};\n\nexport const fetchReviewsInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/reviews?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.results;\n};\n"],"names":["MoviesList","movies","location","useLocation","className","map","movie","to","id","state","from","title","name","useState","setMovies","isLoading","setIsLoading","error","setError","useEffect","fetchDayTrend","results","length","toast","axios","apiKey","endpoints","resp","data","fetchMovieByQuery","query","fetchMovieDetsById","detailEndpoint","fetchCastInfo","movieId","cast","fetchReviewsInfo"],"sourceRoot":""}